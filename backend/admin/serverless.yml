service: chess-dojo-admin
frameworkVersion: '3'

plugins:
  - serverless-plugin-custom-roles
  - serverless-go-plugin

provider:
  name: aws
  runtime: provided.al2
  architecture: arm64
  region: us-east-1
  logRetentionInDays: 30
  environment:
    stage: ${sls:stage}
  httpApi:
    id: ${param:httpApiId}

custom:
  go:
    binDir: bin
    cmd: GOARCH=arm64 GOOS=linux go build -tags lambda.norpc -ldflags="-s -w"
    supportedRuntimes: ['provided.al2']
    buildProvidedRuntimeAsBootstrap: true

functions:
  adminListUsers:
    handler: user/list/main.go
    events:
      - httpApi:
          path: /admin/user
          method: get
          authorizer:
            type: jwt
            id: ${param:apiAuthorizer}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:Scan
        Resource: ${param:UsersTableArn}

  adminGetStatistics:
    handler: statistics/get/main.go
    events:
      - httpApi:
          path: /admin/statistics
          method: get
          authorizer:
            type: jwt
            id: ${param:apiAuthorizer}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
        Resource: ${param:UsersTableArn}

  adminListRequirements:
    handler: requirement/list/main.go
    events:
      - httpApi:
          path: /admin/requirement
          method: get
          authorizer:
            type: jwt
            id: ${param:apiAuthorizer}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
        Resource: ${param:UsersTableArn}
      - Effect: Allow
        Action:
          - dynamodb:Scan
        Resource: ${param:RequirementsTableArn}
