# Deploys functions where PGN parsing is performed.
# These functions are separated as they require a typescript library.

service: chess-dojo-pgn

plugins:
  - serverless-plugin-custom-roles
  - serverless-esbuild

package:
  individually: true

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  logRetentionInDays: 30
  environment:
    stage: ${sls:stage}
  httpApi:
    id: ${param:httpApiId}

functions:
  putOpenClassicalPairings:
    handler: putPairings.handler
    events:
      - httpApi:
          path: /tournaments/open-classical/pairings
          method: put
          authorizer:
            type: jwt
            id: ${param:apiAuthorizer}
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:GetItem
        Resource: ${param:UsersTableArn}
      - Effect: Allow
        Action:
          - dynamodb:GetItem
          - dynamodb:PutItem
        Resource: ${param:TournamentsTableArn}

  processGame:
    handler: explorer/processGame.handler
    timeout: 30
    events:
      - stream:
          type: dynamodb
          arn: ${param:GamesTableStreamArn}
          batchWindow: 20
          batchSize: 2
          maximumRetryAttempts: 2
          parallelizationFactor: 2
          functionResponseType: ReportBatchItemFailures
          filterPatterns:
            - eventName: [INSERT]
    iamRoleStatements:
      - Effect: Allow
        Action:
          - dynamodb:PutItem
          - dynamodb:UpdateItem
        Resource: !GetAtt ExplorerTable.Arn

resources:
  Resources:
    ExplorerTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${sls:stage}-explorer
        AttributeDefinitions:
          - AttributeName: normalizedFen
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: normalizedFen
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
