# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: chess-dojo-scheduler
frameworkVersion: '3'

provider:
  name: aws
  runtime: provided.al2
  architecture: arm64
  region: us-east-1

resources:
  Conditions:
    IsProd: !Equals ['${sls:stage}', 'prod']

  Resources:
    ######### API Gateway Resources ###########

    HttpApi:
      Type: AWS::ApiGatewayV2::Api
      Properties:
        Name: ${sls:stage}-chess-dojo-scheduler
        ProtocolType: HTTP
        CorsConfiguration:
          AllowHeaders:
            - Content-Type
            - X-Amz-Date
            - Authorization
            - X-Api-Key
            - X-Amz-Security-Token
            - X-Amz-User-Agent
            - X-Amzn-Trace-Id
          AllowMethods:
            - OPTIONS
            - GET
            - POST
            - PUT
            - DELETE
          AllowOrigins:
            - '*'

    HttpApiStage:
      Type: AWS::ApiGatewayV2::Stage
      Properties:
        ApiId: !Ref HttpApi
        StageName: $default
        AutoDeploy: true
        DefaultRouteSettings:
          DetailedMetricsEnabled: false

    HttpApiAuthorizerServiceAuthorizer:
      Type: AWS::ApiGatewayV2::Authorizer
      Properties:
        ApiId: !Ref HttpApi
        Name: serviceAuthorizer
        IdentitySource:
          - $request.header.Authorization
        AuthorizerType: JWT
        JwtConfiguration:
          Audience:
            - Ref: UserClient
          Issuer: !GetAtt CognitoUserPool.ProviderURL

    ######### Cognito Resources ###############

    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      DeletionPolicy: Retain
      Properties:
        UserPoolName: ${sls:stage}-chess-dojo-scheduler-auth-pool
        DeletionProtection: ACTIVE
        UsernameConfiguration:
          CaseSensitive: false
        AliasAttributes:
          - email
        MfaConfiguration: OFF
        Schema:
          - Name: email
            Required: true
            Mutable: true
        Policies:
          PasswordPolicy:
            MinimumLength: 6
        AutoVerifiedAttributes: ['email']

    UserClient:
      Type: AWS::Cognito::UserPoolClient
      DeletionPolicy: Retain
      Properties:
        ClientName: ${sls:stage}-chess-dojo-scheduler-auth-client
        GenerateSecret: false
        UserPoolId: { Ref: CognitoUserPool }
        ExplicitAuthFlows:
          - ALLOW_USER_SRP_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
        AllowedOAuthFlowsUserPoolClient: true
        AllowedOAuthFlows:
          - code
        AllowedOAuthScopes:
          - openid
          - email
          - profile
        CallbackURLs:
          - ${file(../config-${sls:stage}.yml):frontendHost}
        LogoutURLs:
          - ${file(../config-${sls:stage}.yml):frontendHost}
        SupportedIdentityProviders:
          - COGNITO
          - Google
        AccessTokenValidity: 24
        IdTokenValidity: 24

    UserPoolDomain:
      Type: AWS::Cognito::UserPoolDomain
      DeletionPolicy: Retain
      Properties:
        UserPoolId: { Ref: CognitoUserPool }
        Domain: user-pool-domain-${sls:stage}-chess-dojo-scheduler

    UserPoolIdentityProvider:
      Type: AWS::Cognito::UserPoolIdentityProvider
      DeletionPolicy: Retain
      Properties:
        UserPoolId: { Ref: CognitoUserPool }
        ProviderName: 'Google'
        ProviderDetails:
          client_id: ${file(../oauth.yml):client_id}
          client_secret: ${file(../oauth.yml):client_secret}
          authorize_scopes: 'profile email openid'
        ProviderType: 'Google'
        AttributeMapping:
          email: 'email'
          name: 'name'
          username: 'sub'
          email_verified: 'email_verified'

    ######### End Cognito Resources ###############

    ######### DynamoDB Resources ##################

    UsersTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${sls:stage}-users
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
          - AttributeName: dojoCohort
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: !If
            - IsProd
            - true
            - false
        GlobalSecondaryIndexes:
          - IndexName: CohortIdx
            KeySchema:
              - AttributeName: dojoCohort
                KeyType: HASH
              - AttributeName: username
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: SearchIdx
            KeySchema:
              - AttributeName: dojoCohort
                KeyType: HASH
              - AttributeName: username
                KeyType: RANGE
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - displayName
                - discordUsername
                - searchKey
                - ratings

    TimelineTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${sls:stage}-timeline
        AttributeDefinitions:
          - AttributeName: owner
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: owner
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: !If
            - IsProd
            - true
            - false
        StreamSpecification:
          StreamViewType: NEW_IMAGE

    FollowersTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${sls:stage}-followers
        AttributeDefinitions:
          - AttributeName: poster
            AttributeType: S
          - AttributeName: follower
            AttributeType: S
        KeySchema:
          - AttributeName: poster
            KeyType: HASH
          - AttributeName: follower
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: !If
            - IsProd
            - true
            - false
        StreamSpecification:
          StreamViewType: KEYS_ONLY
        GlobalSecondaryIndexes:
          - IndexName: FollowingIndex
            KeySchema:
              - AttributeName: follower
                KeyType: HASH
              - AttributeName: poster
                KeyType: RANGE
            Projection:
              ProjectionType: ALL

    EventsTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${sls:stage}-events
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: !If
          - IsProd
          - PROVISIONED
          - PAY_PER_REQUEST
        ProvisionedThroughput: !If
          - IsProd
          - ReadCapacityUnits: 1
            WriteCapacityUnits: 1
          - !Ref AWS::NoValue
        TimeToLiveSpecification:
          AttributeName: expirationTime
          Enabled: true

    RequirementsTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${sls:stage}-requirements
        AttributeDefinitions:
          - AttributeName: status
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: status
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        BillingMode: !If
          - IsProd
          - PROVISIONED
          - PAY_PER_REQUEST
        ProvisionedThroughput: !If
          - IsProd
          - ReadCapacityUnits: 2
            WriteCapacityUnits: 1
          - !Ref AWS::NoValue

    GraduationsTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${sls:stage}-graduations
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
          - AttributeName: previousCohort
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
          - AttributeName: previousCohort
            KeyType: RANGE
        BillingMode: !If
          - IsProd
          - PROVISIONED
          - PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: !If
            - IsProd
            - true
            - false
        ProvisionedThroughput: !If
          - IsProd
          - ReadCapacityUnits: 5
            WriteCapacityUnits: 1
          - !Ref AWS::NoValue

    GamesTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${sls:stage}-games
        AttributeDefinitions:
          - AttributeName: cohort
            AttributeType: S
          - AttributeName: id
            AttributeType: S
          - AttributeName: owner
            AttributeType: S
          - AttributeName: white
            AttributeType: S
          - AttributeName: black
            AttributeType: S
          - AttributeName: isFeatured
            AttributeType: S
          - AttributeName: featuredAt
            AttributeType: S
        KeySchema:
          - AttributeName: cohort
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        BillingMode: !If
          - IsProd
          - PROVISIONED
          - PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: !If
            - IsProd
            - true
            - false
        ProvisionedThroughput: !If
          - IsProd
          - ReadCapacityUnits: 4
            WriteCapacityUnits: 2
          - !Ref AWS::NoValue
        GlobalSecondaryIndexes:
          - IndexName: OwnerIndex
            KeySchema:
              - AttributeName: owner
                KeyType: HASH
              - AttributeName: id
                KeyType: RANGE
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - white
                - black
                - date
                - headers
            ProvisionedThroughput: !If
              - IsProd
              - ReadCapacityUnits: 2
                WriteCapacityUnits: 2
              - !Ref AWS::NoValue
          - IndexName: WhiteIdx
            KeySchema:
              - AttributeName: white
                KeyType: HASH
              - AttributeName: id
                KeyType: RANGE
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - black
                - date
                - owner
                - ownerDisplayName
                - ownerPreviousCohort
                - headers
            ProvisionedThroughput: !If
              - IsProd
              - ReadCapacityUnits: 2
                WriteCapacityUnits: 2
              - !Ref AWS::NoValue
          - IndexName: BlackIdx
            KeySchema:
              - AttributeName: black
                KeyType: HASH
              - AttributeName: id
                KeyType: RANGE
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - white
                - date
                - owner
                - ownerDisplayName
                - ownerPreviousCohort
                - headers
            ProvisionedThroughput: !If
              - IsProd
              - ReadCapacityUnits: 2
                WriteCapacityUnits: 2
              - !Ref AWS::NoValue
          - IndexName: FeaturedIdx
            KeySchema:
              - AttributeName: isFeatured
                KeyType: HASH
              - AttributeName: featuredAt
                KeyType: RANGE
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - white
                - black
                - date
                - owner
                - ownerDisplayName
                - ownerPreviousCohort
                - headers
            ProvisionedThroughput: !If
              - IsProd
              - ReadCapacityUnits: 1
                WriteCapacityUnits: 1
              - !Ref AWS::NoValue

    OpeningTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${sls:stage}-openings
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: !If
          - IsProd
          - PROVISIONED
          - PAY_PER_REQUEST
        ProvisionedThroughput: !If
          - IsProd
          - ReadCapacityUnits: 1
            WriteCapacityUnits: 1
          - !Ref AWS::NoValue
        GlobalSecondaryIndexes:
          - IndexName: CourseIndex
            KeySchema:
              - AttributeName: id
                KeyType: HASH
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - name
                - cohortRange
                - color
            ProvisionedThroughput: !If
              - IsProd
              - ReadCapacityUnits: 1
                WriteCapacityUnits: 1
              - !Ref AWS::NoValue

    TournamentsTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${sls:stage}-tournaments
        AttributeDefinitions:
          - AttributeName: type
            AttributeType: S
          - AttributeName: startsAt
            AttributeType: S
        KeySchema:
          - AttributeName: type
            KeyType: HASH
          - AttributeName: startsAt
            KeyType: RANGE
        BillingMode: !If
          - IsProd
          - PROVISIONED
          - PAY_PER_REQUEST
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: !If
            - IsProd
            - true
            - false
        ProvisionedThroughput: !If
          - IsProd
          - ReadCapacityUnits: 1
            WriteCapacityUnits: 1
          - !Ref AWS::NoValue

    NotificationsTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${sls:stage}-notifications
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        BillingMode: !If
          - IsProd
          - PROVISIONED
          - PAY_PER_REQUEST
        ProvisionedThroughput: !If
          - IsProd
          - ReadCapacityUnits: 1
            WriteCapacityUnits: 1
          - !Ref AWS::NoValue

    NewsfeedTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        TableName: ${sls:stage}-newsfeed
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: newsfeedId
            AttributeType: S
          - AttributeName: sortKey
            AttributeType: S
          - AttributeName: poster
            AttributeType: S
          - AttributeName: timelineId
            AttributeType: S
        KeySchema:
          - AttributeName: newsfeedId
            KeyType: HASH
          - AttributeName: sortKey
            KeyType: RANGE
        PointInTimeRecoverySpecification:
          PointInTimeRecoveryEnabled: !If
            - IsProd
            - true
            - false
        GlobalSecondaryIndexes:
          - IndexName: PosterIndex
            KeySchema:
              - AttributeName: poster
                KeyType: HASH
              - AttributeName: timelineId
                KeyType: RANGE
            Projection:
              ProjectionType: KEYS_ONLY

    ############# S3 Resources #################

    GameDatabaseBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        BucketName: chess-dojo-${sls:stage}-game-database
        PublicAccessBlockConfiguration:
          BlockPublicPolicy: false

    GameDatabaseBucketPolicy:
      Type: AWS::S3::BucketPolicy
      DeletionPolicy: Retain
      Properties:
        Bucket: !Ref GameDatabaseBucket
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
              Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref GameDatabaseBucket
                  - /dojo_database.zip
              Principal: '*'

    PicturesBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        BucketName: chess-dojo-${sls:stage}-pictures
        PublicAccessBlockConfiguration:
          BlockPublicPolicy: false

    PicturesBucketPolicy:
      Type: AWS::S3::BucketPolicy
      DeletionPolicy: Retain
      Properties:
        Bucket: !Ref PicturesBucket
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - s3:GetObject
              Resource: !Join
                - ''
                - - 'arn:aws:s3:::'
                  - !Ref PicturesBucket
                  - /profile/*
              Principal: '*'

    SecretsBucket:
      Type: AWS::S3::Bucket
      DeletionPolicy: Retain
      Properties:
        BucketName: chess-dojo-${sls:stage}-secrets

    ############# End S3 Resources ##############

    ############# Alert Resources ###############

    AlertNotificationsTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: chess-dojo-${sls:stage}-alert-notifications
        Subscription:
          - Endpoint: jackstenglein@gmail.com
            Protocol: EMAIL

    UpdateRatingsTimeoutAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: UpdateRatingsTimeout-${sls:stage}
        AlarmDescription: 'Notifications about Lambda timeouts for updateRatings function'
        AlarmActions:
          - !Ref AlertNotificationsTopic
        Namespace: AWS/Lambda
        MetricName: Duration
        Statistic: Maximum
        Dimensions:
          - Name: FunctionName
            Value: chess-dojo-scheduler-${sls:stage}-updateRatings
        Period: 86400
        EvaluationPeriods: 1
        Threshold: 700000
        ComparisonOperator: GreaterThanThreshold
        TreatMissingData: ignore

    UpdateStatisticsTimeoutAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: UpdateStatisticsTimeout-${sls:stage}
        AlarmDescription: 'Notifications about Lambda timeouts for updateStatistics function'
        AlarmActions:
          - !Ref AlertNotificationsTopic
        Namespace: AWS/Lambda
        MetricName: Duration
        Statistic: Maximum
        Dimensions:
          - Name: FunctionName
            Value: chess-dojo-scheduler-${sls:stage}-updateStatistics
        Period: 86400
        EvaluationPeriods: 1
        Threshold: 700000
        ComparisonOperator: GreaterThanThreshold
        TreatMissingData: ignore

    UpdateTimeSpentTimeoutAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: UpdateTimeSpentTimeout-${sls:stage}
        AlarmDescription: 'Notifications about Lambda timeouts for updateTimeSpent function'
        AlarmActions:
          - !Ref AlertNotificationsTopic
        Namespace: AWS/Lambda
        MetricName: Duration
        Statistic: Maximum
        Dimensions:
          - Name: FunctionName
            Value: chess-dojo-scheduler-${sls:stage}-updateTimeSpent
        Period: 86400
        EvaluationPeriods: 1
        Threshold: 700000
        ComparisonOperator: GreaterThanThreshold
        TreatMissingData: ignore

    UpdateGameStatisticsTimeoutAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: UpdateGameStatisticsTimeout-${sls:stage}
        AlarmDescription: 'Notifications about Lambda timeouts for updateGameStatistics function'
        AlarmActions:
          - !Ref AlertNotificationsTopic
        Namespace: AWS/Lambda
        MetricName: Duration
        Statistic: Maximum
        Dimensions:
          - Name: FunctionName
            Value: chess-dojo-scheduler-${sls:stage}-updateGameStatistics
        Period: 86400
        EvaluationPeriods: 1
        Threshold: 700000
        ComparisonOperator: GreaterThanThreshold
        TreatMissingData: ignore

    SnapshotTournamentLeaderboardTimeoutAlarm:
      Type: AWS::CloudWatch::Alarm
      Properties:
        AlarmName: SnapshotTournamentLeaderboardTimeout-${sls:stage}
        AlarmDescription: 'Notifications about Lambda timeouts for snapshotTournamentLeaderboard function'
        AlarmActions:
          - !Ref AlertNotificationsTopic
        Namespace: AWS/Lambda
        MetricName: Duration
        Statistic: Maximum
        Dimensions:
          - Name: FunctionName
            Value: chess-dojo-scheduler-${sls:stage}-snapshotTournamentLeaderboard
        Period: 86400
        EvaluationPeriods: 1
        Threshold: 700000
        ComparisonOperator: GreaterThanThreshold
        TreatMissingData: ignore

    ########### End Alert Resources #############

  Outputs:
    HttpApiId:
      Value: !Ref HttpApi
    serviceAuthorizer:
      Value: !Ref HttpApiAuthorizerServiceAuthorizer
    UserPoolId:
      Value: !Ref CognitoUserPool
    UserPoolArn:
      Value: !GetAtt CognitoUserPool.Arn
    userPoolClient:
      Value: !Ref UserClient
    userPoolProviderUrl:
      Value: !GetAtt CognitoUserPool.ProviderURL
    UsersTableArn:
      Value: !GetAtt UsersTable.Arn
    RequirementsTableArn:
      Value: !GetAtt RequirementsTable.Arn
    GraduationsTableArn:
      Value: !GetAtt GraduationsTable.Arn
    OpeningsTableArn:
      Value: !GetAtt OpeningTable.Arn
    NewsfeedTableArn:
      Value: !GetAtt NewsfeedTable.Arn
    TimelineTableArn:
      Value: !GetAtt TimelineTable.Arn
    TimelineTableStreamArn:
      Value: !GetAtt TimelineTable.StreamArn
    FollowersTableArn:
      Value: !GetAtt FollowersTable.Arn
    FollowersTableStreamArn:
      Value: !GetAtt FollowersTable.StreamArn
    NotificationsTableArn:
      Value: !GetAtt NotificationsTable.Arn
    EventsTableArn:
      Value: !GetAtt EventsTable.Arn
    TournamentsTableArn:
      Value: !GetAtt TournamentsTable.Arn
    GamesTableArn:
      Value: !GetAtt GamesTable.Arn
    PicturesBucket:
      Value: !Ref PicturesBucket
    GameDatabaseBucket:
      Value: !Ref GameDatabaseBucket
    SecretsBucket:
      Value: !Ref SecretsBucket
