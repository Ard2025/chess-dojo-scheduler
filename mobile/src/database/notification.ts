/**
 * Represents the type of a Notification.
 */
export enum NotificationType {
    /** Notifications generated by comments on a game. */
    GameComment = 'GAME_COMMENT',

    /** Notifications generated by getting a new follower. */
    NewFollower = 'NEW_FOLLOWER',

    /** Notifications generated by comments on a timeline entry. */
    TimelineComment = 'TIMELINE_COMMENT',

    /** Notifications generated by reactions on a timeline entry. */
    TimelineReaction = 'TIMELINE_REACTION',
}

/**
 *  Data for a notification.
 */
export interface Notification {
    /** The id of the Notification. */
    id: string;

    /** The type of the Notification. */
    type: NotificationType;

    /** The time the Notification was last updated. */
    updatedAt: string;

    /** The number of unread instances of this notification. */
    count: number;

    /** Metadata for a game comment Notification. */
    gameCommentMetadata?: {
        /** The cohort of the Game. */
        cohort: string;

        /** The id of the Game. */
        id: string;

        /** The headers of the Game. */
        headers: {
            [key: string]: string;
        };
    };

    /** Metadata for a new follower notification. */
    newFollowerMetadata?: {
        /** The username of the new follower. */
        username: string;

        /** The display name of the new follower. */
        displayName: string;

        /** The cohort of the new follower. */
        cohort: string;
    };

    /** Metadata for a timeline comment notification */
    timelineCommentMetadata?: {
        /** The owner of the associated timeline entry */
        owner: string;

        /** The id of the associated timeline entry */
        id: string;

        /** The requirement name of the associated timeline entry */
        name: string;
    };
}

export function getTitle(notification: Notification): string {
    switch (notification.type) {
        case NotificationType.GameComment:
            return `${notification.gameCommentMetadata?.headers?.White} - ${notification.gameCommentMetadata?.headers?.Black}`;
        case NotificationType.NewFollower:
            return 'You have a new follower';
        case NotificationType.TimelineComment:
        case NotificationType.TimelineReaction:
            return `${notification.timelineCommentMetadata?.name}`;
    }
}

export function getDescription(notification: Notification): string {
    let count = notification.count || 1;

    switch (notification.type) {
        case NotificationType.GameComment:
            return 'There are new comments on your game.';
        case NotificationType.NewFollower:
            return `${notification.newFollowerMetadata?.displayName}`;
        case NotificationType.TimelineComment:
            return `There ${count !== 1 ? `are ${count}` : 'is a'} new comment${
                count !== 1 ? 's' : ''
            } on your activity.`;
        case NotificationType.TimelineReaction:
            return `There ${count !== 1 ? `are ${count}` : 'is a'} new reaction${
                count !== 1 ? 's' : ''
            } on your activity.`;
    }
}
